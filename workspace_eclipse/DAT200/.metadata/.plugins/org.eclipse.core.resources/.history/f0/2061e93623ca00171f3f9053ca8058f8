package kapteinOks;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import grafalgoritmer.Dijkstra;

import grafalgoritmer.NoderNaboliste;

public class TestKaptainOks {
	public static int x, y, startX, startY, sluttX, sluttY;
	public static int[][] kart;
	public static Graf<Integer> liste= new NoderNaboliste<Integer>();
	public static void main(String[] args) {
		lesKartFraFil();
		konverterTilNode();
		Dijkstra<Integer> dij = new Dijkstra<Integer>(liste, startX+ startY*x, maalX + maalY*x);


	}


	private static void konverterTilNode() {
			for(int teller1 = 0; teller1 < y; teller1++){
				for(int teller2 = 0; teller2 < x; teller2++){
					Integer navn = teller2 + teller1*12;
					liste.addNode(navn);
				}
			}
			// legger in hvilken kordinater som er koblet til hvilken kordinater
			for(int teller1 = 0; teller1 < y; teller1++){
				for(int teller2 = 0; teller2 < x; teller2++){
					// hver if legger til kanten hvis den eksisterer.
					if(teller1 != y-1){
						// legger til hvor langt det er mellom to kordinater
						int vekt = Math.abs(map[teller2][teller1] - map[teller2][teller1 + 1]) + 1;
						// legger til kanten
						liste.addEdge(teller1 * x + teller2,(teller1+1) * x + teller2,vekt);
					}
					if( teller1 != 0){
						int vekt = Math.abs(map[teller2][teller1] - map[teller2][teller1 - 1]) + 1;
						liste.addEdge(teller1 * x + teller2,(teller1 - 1) * x + teller2,vekt);
					}
					if (teller2 != x-1){
						int vekt = Math.abs(map[teller2][teller1] - map[teller2 + 1][teller1]) + 1;
						liste.addEdge(teller1 * x + teller2,teller1 * x + teller2 + 1,vekt);
					}
					if (teller2 != 0){
						int vekt = Math.abs(map[teller2][teller1] - map[teller2 - 1][teller1]) + 1;
						liste.addEdge(teller1 * x + teller2,teller1 * x + teller2 - 1,vekt);
					}	
				}
			}
			System.out.println(liste.toString());
		}


		public static void lesKartFraFil() {
			try {
				Scanner filleser = new Scanner(new File("kart.txt"));
				String linje;
				KaptainOksKart leser = new KaptainOksKart();
				int i = filleser.nextInt();
				int j = filleser.nextInt();
				kart= new int[i][j];
				int startX= filleser.nextInt();
				int startY= filleser.nextInt();
				//			liste.add(new NoderNaboliste());
				int sluttX= filleser.nextInt();
				int sluttY= filleser.nextInt();
				System.out.println("_"+ sluttY);
				//			liste.add(new NoderNaboliste());
				filleser.nextLine();

				for(int jj=0; jj<j; jj++){

					linje = filleser.nextLine();

					//				System.out.println(jj);// + linje);
					String[] komp = linje.split(",");

					for(int ii=0; ii<i; ii++){
						System.out.print(" "+komp[ii]);
						kart[ii][jj]= Integer.parseInt(komp[ii]);	
					}
					System.out.print("\n");

				}


			} catch (FileNotFoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();

			}

		}


	}
